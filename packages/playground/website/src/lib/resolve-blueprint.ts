import { Blueprint } from '@wp-playground/client';
import { queryParamsToBlueprint } from './query-api';

const query = new URL(document.location.href).searchParams;
const fragment = decodeURI(document.location.hash || '#').substring(1);

export async function resolveBlueprint() {
	let blueprint: Blueprint;
	/*
	 * Support passing blueprints via query parameter, e.g.:
	 * ?blueprint-url=https://example.com/blueprint.json
	 */
	if (query.has('blueprint-url')) {
		const url = query.get('blueprint-url');
		const response = await fetch(url!, {
			credentials: 'omit',
		});
		blueprint = await response.json();
	} else if (fragment.length) {
		/*
		 * Support passing blueprints in the URI fragment, e.g.:
		 * /#{"landingPage": "/?p=4"}
		 */
		try {
			try {
				blueprint = JSON.parse(atob(fragment));
			} catch (e) {
				blueprint = JSON.parse(fragment);
			}
			// Allow overriding the preferred versions using query params
			// generated by the version switchers.
			if (query.get('php') || query.get('wp')) {
				if (!blueprint.preferredVersions) {
					blueprint.preferredVersions = {} as any;
				}
				blueprint.preferredVersions!.php =
					(query.get('php') as any) ||
					blueprint.preferredVersions!.php ||
					'8.0';
				blueprint.preferredVersions!.wp =
					query.get('wp') ||
					blueprint.preferredVersions!.wp ||
					'latest';
			}
		} catch (e) {
			// Noop
		}
	}

	// If no blueprint was passed, prepare one based on the query params.
	// @ts-ignore
	if (typeof blueprint === 'undefined') {
		blueprint = queryParamsToBlueprint(query);
	}

	return blueprint;
}
